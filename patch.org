* system configure
- idea conf:
  - configure =/etc/profile=
    =export IDEA_PROPERTIES=/home/yydcnjjw/.IntelliJIdea/idea.properties=
- docker conf:
  - install
    #+BEGIN_SRC shell
      yaourt -S docker nvidia-docker
    #+END_SRC 
  - configure =/etc/systemd/system/docker.service.d/docker-storage.conf=
    modify docker file dir
- pac conf:
  - install
    #+BEGIN_SRC shell
      pip install --user genpac
    #+END_SRC
- wifi conf
  =netctl=
  =wife-menu=
- sound conf
  #+BEGIN_EXAMPLE
  /etc/modprobe.d/modprobe.conf
  options snd_hda_intel power_save=0
  $HOME/.asoundrc
  defaults.pcm.rate_converter "samplerate_best"
  #+END_EXAMPLE

* developer env
** flutter
- configure cn repository
<s



* Test
#+BEGIN_SRC plantuml :file test.png
  @startuml
  start
  :device init;
  while (1)
    if (Interval(10000))
      :update temperature;
    endif
    if (temperature > 40)
      :beep on;
    endif
    :show digital tube;
  endwhile
  stop
  @enduml
#+END_SRC

#+RESULTS:
[[file:test.png]]

#+BEGIN_SRC plantuml :file test1.png
  @startuml
  start
  :device init;
  while(1)
    :show LED;
  endwhile
  stop
  @enduml
#+END_SRC

#+RESULTS:
[[file:test1.png]]

#+BEGIN_SRC plantuml :file test2.png
  @startuml
  :开始;
  :初始化;
  while(1)
    :LED1 亮;
    :延时;
    :...;
    :LED8 亮;
    :延时;
  endwhile
  :退出;
  @enduml
#+END_SRC

#+RESULTS:
[[file:test2.png]]

#+BEGIN_SRC plantuml :file test3.png
  @startuml
  :开始;
  :初始化;
  while (1)
    :读取内部温度传感器的数字量;
    :公式转成实际温度值;
  if (实际温度 > 38)
    :蜂鸣器启动;
  endif
  :数码管显示温度值;
  endwhile
  :退出;
  @enduml
#+END_SRC

#+RESULTS:
[[file:test3.png]]

#+BEGIN_SRC plantuml :file test4.png
  @startuml
  :开始;
  :初始化;
  while(1)
  :获取按钮值;
  if (按钮值 == 1)
    :LED 闪烁周期为 200 ms;
  elseif (按钮值 == 2)
    :LED 闪烁周期为 500 ms;
  elseif (按钮值 == 3)
    :LED 闪烁周期为 1000 ms;
  endif
  :复位;
  endwhile
  :退出;
  @enduml
#+END_SRC

#+RESULTS:
[[file:test4.png]]

#+BEGIN_SRC plantuml :file test5.png
  @startuml
  start
  :device init;
  while(1)
    :get button value;
    if (value == 1)
      :LED set cycle to 200 ms;
    elseif (value == 2)
      :LED set cycle to 500 ms;
    elseif (value == 3)
      :LED set cycle to 1000 ms;
    endif
    :reset;
  endwhile
  stop
  @enduml
#+END_SRC

#+RESULTS:
[[file:test5.png]]
